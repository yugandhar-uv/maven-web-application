node{
def mavenhome = tool name: "maven3.8.6"
stage('checkoutcode'){
git branch: 'development', credentialsId: 'bd2b9d51-1405-44e3-a489-5b7e6ff16390', url: 'https://github.com/yugandhar-uv/maven-web-application.git'}
try{
stage('build'){
sh "${mavenhome}/bin/mvn clean package"}

stage('sonarqube report'){
sh "${mavenhome}/bin/mvn clean sonar:sonar" 
}
stage('deploying to artifact repo'){
sh "${mavenhome}/bin/mvn clean deploy" 
}
stage('deploytotomcat'){
sshagent(['3f35840e-6e04-4602-84ce-8889c99599b5']){ 
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.41.118:/opt/apache-tomcat-9.0.65/webapps/"}

}
} catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e } 
     finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)}

} // node closing
//code for slack notification

def slacknotify(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
